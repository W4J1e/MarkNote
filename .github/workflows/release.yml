name: Build and Release APK

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  build:
    environment: build  # 添加environment配置
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
    
    - name: Verify Java Version
      run: java -version
    
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('client/app/gradle/wrapper/gradle-wrapper.properties') }}
    
    - name: Grant execute permission for gradlew
      run: chmod +x client/app/gradlew
    
    - name: Verify Secrets
      run: |
        if [ -z "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "Error: KEYSTORE_BASE64 secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.STORE_FILE }}" ]; then
          echo "Error: STORE_FILE secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.STORE_PASSWORD }}" ]; then
          echo "Error: STORE_PASSWORD secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.KEY_ALIAS }}" ]; then
          echo "Error: KEY_ALIAS secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.KEY_PASSWORD }}" ]; then
          echo "Error: KEY_PASSWORD secret is not set"
          exit 1
        fi
      shell: bash

    - name: Decode Keystore
      run: |
        STORE_DIR=$(dirname "${{ secrets.STORE_FILE }}")
        mkdir -p "$STORE_DIR"
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -di > "${{ secrets.STORE_FILE }}"
        if [ ! -s "${{ secrets.STORE_FILE }}" ]; then
          echo "Error: Failed to decode keystore file or file is empty"
          ls -la "$STORE_DIR"
          exit 1
        fi
        echo "Keystore successfully decoded to ${{ secrets.STORE_FILE }}"
      shell: bash

    - name: Build Release APK
      run: cd client/app && ./gradlew assembleRelease
      env:
        STORE_FILE: ${{ secrets.STORE_FILE }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    
    - name: Build Debug APK
      run: cd client/app && ./gradlew assembleDebug
    
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: client/app/build/outputs/apk/release/*.apk
    
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: client/app/build/outputs/apk/debug/*.apk
    
    - name: Clean up keystore
      if: always()
      run: |
        if [ -f "${{ secrets.STORE_FILE }}" ]; then
          rm -f "${{ secrets.STORE_FILE }}"
        fi
    
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: app-release
        path: release-apk
    
    - name: Download Debug APK
      uses: actions/download-artifact@v4
      with:
        name: app-debug
        path: debug-apk
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        body: |
          APK built from ${{ github.ref }}
        files: |
          release-apk/*.apk
          debug-apk/*.apk
