apply plugin: 'com.android.application'
apply plugin: 'AndResGuard'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "me.shouheng.notepal"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 13
        versionName "2.3"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // place holder
        manifestPlaceholders = [
                UMENG_CHANNEL_VALUE: "umeng",
                UMENG_APPKEY: "${umengAppKey}",
                FABRIC_APPKEY: "${fabricAppKey}",
        ]
    }
    // 添加签名配置
    signingConfigs {
        release {
            storeFile file(System.getenv("_storeFile") ?: "debug.keystore")
            storePassword System.getenv("_storePassword") ?: ""
            keyAlias System.getenv("_keyAlias") ?: ""
            keyPassword System.getenv("_keyPassword") ?: ""
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release  // 关联签名配置
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

    signingConfigs {
        release {
            keyAlias "${_keyAlias}"
            storeFile file("${_storeFile}")
            storePassword "${_storePassword}"
            keyPassword "${_keyPassword}"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true // enable shrink resources
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = defaultConfig.applicationId + "-" + variant.baseName + "-" + defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk";
            }
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = '17'
            freeCompilerArgs = ["-Xjvm-default=all"]
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
        }
        alpha {
            dimension "default"
        }
        beta {
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    // AndResGuard
    andResGuard {
        mappingFile = null
        // Do NOT enable 7zip compression(use7zip) when you distribute your APP on Google Play: https://github.com/shwenzhang/AndResGuard/issues/233
        use7zip = true
        useSign = true
        keepRoot = false

        whiteList = [
                // for fabric
                "R.string.com.crashlytics.*",
                // for google-services
                "R.string.google_app_id",
                "R.string.gcm_defaultSenderId",
                "R.string.default_web_client_id",
                "R.string.ga_trackingId",
                "R.string.firebase_database_url",
                "R.string.google_api_key",
                "R.string.google_crash_reporting_api_key"
        ]
        compressFilePattern = [
                "*.png",
                "*.jpg",
                "*.jpeg",
                "*.gif",
        ]
        sevenzip {
            artifact = 'com.tencent.mm:SevenZip:1.2.13'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    
    // Static analysis tools
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.23.1"
    
    implementation project(path: ':commons')
    implementation project(path: ':data')
    implementation project(path: ':pinlockview')
    implementation project(path: ':fingerprint')
}
